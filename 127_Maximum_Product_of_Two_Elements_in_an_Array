Given the array of integers nums, you will choose two different indices i and j of that array.
Return the maximum value of (nums[i]-1)*(nums[j]-1).

class Solution {
    public int maxProduct(int[] nums) {
        Arrays.sort(nums);
        int n = nums.length-1;

        return (nums[n]-1) * (nums[n-1]-1);
    }
}

optimize to 0ms:
class Solution {
public:
    int maxProduct(vector<int>& nums) {
        int m1 = INT_MIN;
        int m2 = INT_MIN;

        for(int i=0; i<nums.size(); i++){
            if(nums[i] >= m1){
                m2 = m1;
                m1 = nums[i];
            }
            else if(nums[i] > m2){
                m2 = nums[i];
            }
        }

        return (m2-1) * (m1-1);
    }
};
