You are given a string s formed by digits and '#'. We want to map s to English lowercase characters as follows:

Characters ('a' to 'i') are represented by ('1' to '9') respectively.
Characters ('j' to 'z') are represented by ('10#' to '26#') respectively.
Return the string formed after mapping.

The test cases are generated so that a unique mapping will always exist.

class Solution {
    public String freqAlphabets(String s) {
        StringBuilder res = new StringBuilder();
        String alpha = "abcdefghijklmnopqrstuvwxyz";
        for(int i=s.length()-1; i>=0; ){
            if(s.charAt(i) == '#'){
                res.append(alpha.charAt(Integer.parseInt(s.substring(i - 2, i)) - 1));
                i-=3;
            }
            else{
                res.append(alpha.charAt(s.charAt(i)-'0'-1));
                i--;
            }
        }

        res.reverse();
        return res.toString();
    }
}
