C++
class MyLinkedList {
public:
    vector<int> v;
    MyLinkedList() {
        
    }
    
    int get(int index) {
        for(int i=0;i<v.size();i++){
            if(i == index){
                return v[i];
            }
        }
        return -1;
    }
    
    void addAtHead(int val) {
        v.insert(v.begin()+0, val);
    }
    
    void addAtTail(int val) {
        v.push_back(val);
    }
    
    void addAtIndex(int index, int val) {
        if(index < v.size()){
            v.insert(v.begin()+index, val);
        }
        else if(index == v.size()){
            v.push_back(val);
        }
    }
    
    void deleteAtIndex(int index) {
        if(index < v.size()){
            v.erase(v.begin()+index);
        }
    }
};

/**
 * Your MyLinkedList object will be instantiated and called as such:
 * MyLinkedList* obj = new MyLinkedList();
 * int param_1 = obj->get(index);
 * obj->addAtHead(val);
 * obj->addAtTail(val);
 * obj->addAtIndex(index,val);
 * obj->deleteAtIndex(index);
 */

JAVA

class MyLinkedList {
    int length;
    Node head;
    class Node{
        int val;
        Node next;

        Node(int x){
            this.val = x;
        }
    }

    public MyLinkedList() {
        this.length = 0;
        this.head = null;
    }
    
    public int get(int index) {
        if(index < 0 || index >= this.length){
            return -1;
        }
        else{
            int cnt = 0;
            Node curr = head;

            while(cnt != index){
                curr = curr.next;
                cnt++;
            }
            return curr.val;
        }
    }
    
    public void addAtHead(int val) {
        Node newNode = new Node(val);
        newNode.next = this.head;
        this.head = newNode;
        this.length++;
    }
    
    public void addAtTail(int val) {
        if(this.length == 0){
            addAtHead(val);
            return;
        }
        else{
            Node newNode = new Node(val);
            Node temp = head;
            while(temp.next != null){
                temp = temp.next;
            }
            temp.next = newNode;
            newNode.next = null;
            this.length++;
        }
    }
    
    public void addAtIndex(int index, int val) {
        Node newNode = new Node(val);
        Node temp = head;
        int cnt = 0;

        if(index > this.length){
            return;
        }
        if(index == 0){
            addAtHead(val);
            return;
        }
        if(index == this.length){
            addAtTail(val);
            return;
        }
        while(cnt != index-1){
            temp = temp.next;
            cnt++;
        }

        newNode.next = temp.next;
        temp.next = newNode;
        this.length++;
    }
    
    public void deleteAtIndex(int index) {
        if(index < 0 || index >= this.length){
            return;
        }
        Node temp = this.head;
        if(index == 0){
            this.head = temp.next;
            this.length--;
        }
        else{
            Node pre = null;
            int cnt = 0;
            while (cnt < index) {
                pre = temp;
                temp = temp.next;
                cnt++;
            }
            pre.next = temp.next;
            this.length--;
        }
    }
}

/**
 * Your MyLinkedList object will be instantiated and called as such:
 * MyLinkedList obj = new MyLinkedList();
 * int param_1 = obj.get(index);
 * obj.addAtHead(val);
 * obj.addAtTail(val);
 * obj.addAtIndex(index,val);
 * obj.deleteAtIndex(index);
 */
