Given the root of a binary tree, return the level order traversal of its nodes' values. (i.e., from left to right, level by level).

Input: root = [3,9,20,null,null,15,7]
Output: [[3],[9,20],[15,7]]


class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<>();
        List<List<Integer>> l = new LinkedList<List<Integer>>();
        if(root == null){
            return l;
        }

        q.offer(root);
        while (!q.isEmpty()) {
            int levelSize = q.size();
            List<Integer> subL = new LinkedList<>();

            for (int i = 0; i < levelSize; i++) {
                TreeNode current = q.poll();
                subL.add(current.val);

                if (current.left != null) {
                    q.offer(current.left);
                }
                if (current.right != null) {
                    q.offer(current.right);
                }
            }
            l.add(subL);
        }
        return l;
    }
}
