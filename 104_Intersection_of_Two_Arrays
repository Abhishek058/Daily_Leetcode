Given two integer arrays nums1 and nums2, return an array of their intersection.
Each element in the result must be unique and you may return the result in any order.

java

public class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        Set<Integer> st1 = new HashSet<>();
        Set<Integer> inSet = new HashSet<>();
        for (int i = 0; i < nums1.length; i++) {
            st1.add(nums1[i]);
        }
        for (int i = 0; i < nums2.length; i++) {
            if (st1.contains(nums2[i])) {
                inSet.add(nums2[i]);
            }
        }
        int[] result = new int[inSet.size()];
        int i = 0;
        for (int num : inSet) {
            result[i++] = num;
        }
        return result;
    }
}

Two pointer:
class Solution {
public:
    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {

        vector<int> ans;
        sort(nums1.begin(), nums1.end());
        sort(nums2.begin(), nums2.end());

        int i=0, j=0;
        while((i<nums1.size()) && (j<nums2.size())){
            if(nums1[i] < nums2[j]){
                i++;
            }
            else if(nums1[i] > nums2[j]){
                j++;
            }
            else{
                ans.push_back(nums1[i]);
                i++;
                j++;
            }
        }

        return ans;
    }
};
