Given a non-negative integer x, return the square root of x rounded down to the nearest integer. The returned integer should be non-negative as well.

You must not use any built-in exponent function or operator.

For example, do not use pow(x, 0.5) in c++ or x ** 0.5 in python.


BruteForce:
class Solution {
    public int mySqrt(int x) {
        if(x <= 1){
            return x;
        }

        long i = 1;
        long sq = i * i;

        while(x >= sq){
            i++;
            sq = i * i;
        }

        return (int) (i-1);
    }
}

Optimized to 1ms
class Solution {
    public int mySqrt(int x) {
        long s = 0, e = x, mid, ans = -1;
        while (s <= e) {
            mid = s + (e - s) / 2;
            long sq = mid * mid;

            if (sq == x) {
                return (int) mid;
            } else if (sq < x) {
                ans = mid;
                s = mid + 1;
            } else {
                e = mid - 1;
            }
        }

        return (int) ans;
    }
}
