Given an integer array nums and a positive integer k, return the most competitive subsequence of nums of size k.

We define that a subsequence a is more competitive than a subsequence b (of the same length) if in the first position where a and b differ, subsequence a has a number less than the corresponding number in b.

class Solution {
    public int[] mostCompetitive(int[] nums, int k) {
        Stack<Integer> st = new Stack<>();
        for(int i=0; i<nums.length; i++){
            while(!st.isEmpty() && nums[i] < st.peek() && st.size() + nums.length - i > k){
                st.pop();
            }
            if(st.size() < k){
                st.push(nums[i]);
            }
        }

        int i = k;
        int res[] = new int[k];
        while(!st.isEmpty()){
            res[--i] = st.pop();
        }

        return res;
    }
}
