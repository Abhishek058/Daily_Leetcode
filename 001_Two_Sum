
Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.

C++

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> ans;
        for(int i=0;i<nums.size();i++){
            for(int j=i+1;j<nums.size();j++){
                if(nums[i] + nums[j] == target){
                    ans.push_back(i);
                    ans.push_back(j);
                }
            }
        }
        return ans;
    }
};


JAVA

class Solution {
    public int[] twoSum(int[] nums, int target) {
        Map<Integer, Integer> pair = new HashMap<>();
        int ans[] = new int[2];
        for(int i=0; i<nums.length; i++){
            int num2 = target - nums[i];
            if(pair.containsKey(num2)){
                ans[0] = pair.get(num2);
                ans[1] = i;
                break;
            }
            pair.put(nums[i], i);
        }

        return ans;
    }
}
