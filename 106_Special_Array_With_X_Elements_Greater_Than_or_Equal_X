You are given an array nums of non-negative integers. nums is considered special if there exists a number x such that there are exactly x numbers in nums that are greater than or equal to x.

Notice that x does not have to be an element in nums.

Return x if the array is special, otherwise, return -1. It can be proven that if nums is special, the value for x is unique.


Brute Force:

class Solution {
public:
    int specialArray(vector<int>& nums) {
        int n = nums.size();  // Store the size of the array to avoid recalculating it in the loop.
        
        for (int x = 0; x <= n; x++) {
            int cnt = 0;
            
            for (int num : nums) {
                if (num >= x) {
                    cnt++;
                }
            }
            
            if (cnt == x) {
                return x;
            }
        }
        
        return -1;
    }
};

Optimized:
//lowerbound is another binary search function

class Solution {
    public int specialArray(int[] nums) {
        int s = 0, e = nums.length;
        Arrays.sort(nums);
        int cnt;
        while(s<e){
            int m = s+(e-s)/2;
            cnt = nums.length() - lower_bound(nums.begin(), nums.end(), mid) - nums.begin();
            if (cnt < mid) {
                right = mid - 1;
            } else {
                left = mid + 1;
            }
        }
        return cnt;
    }
}
