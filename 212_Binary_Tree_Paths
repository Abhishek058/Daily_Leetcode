Given the root of a binary tree, return all root-to-leaf paths in any order.

A leaf is a node with no children.

public class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> result = new ArrayList<>();
        if (root == null) {
            return result;
        }
        findPaths(root, "", result);
        return result;
    }

    private void findPaths(TreeNode node, String currentPath, List<String> result) {
        if (node == null) {
            return;
        }

        if (currentPath.isEmpty()) {
            currentPath = String.valueOf(node.val);
        } else {
            currentPath += "->" + node.val;
        }

        if (node.left == null && node.right == null) {
            result.add(currentPath);
        } else {
            findPaths(node.left, currentPath, result);
            findPaths(node.right, currentPath, result);
        }
    }
}
