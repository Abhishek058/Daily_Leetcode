Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.

You must implement a solution with a linear runtime complexity and use only constant extra space.

C++

class Solution {
public:
    int singleNumber(vector<int>& nums) {
        int n = nums.size();
        int res = 0;
        unordered_map<int, int> freq;
        for(int e : nums){
            freq[e]++;
        }
        for(const auto &pairs : freq){
            if(pairs.second == 1){
                res = pairs.first;
            }
        }
        return res;
    }
};
