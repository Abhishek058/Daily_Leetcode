Given a singly linked list, return a random node's value from the linked list. Each node must have the same probability of being chosen.

Implement the Solution class:

Solution(ListNode head) Initializes the object with the head of the singly-linked list head.
int getRandom() Chooses a node randomly from the list and returns its value. All the nodes of the list should be equally likely to be chosen.

class Solution {
public:
    ListNode* head;
    std::default_random_engine generator; // Create a random number generator
    Solution(ListNode* head) {
        this->head = head;
        std::srand(std::time(0)); // Seed the C rand() function
    }
    
    int getRandom() {
        int cnt = 1;

        ListNode* curr = head;
        int res = curr->val;

        while (curr != NULL) {
            if (std::rand() % cnt == 0) {
                res = curr->val;
            }

            curr = curr->next;
            cnt++;
        }

        return res;
    }
};
