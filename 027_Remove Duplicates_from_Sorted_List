Given the head of a sorted linked list, delete all duplicates such that each element appears only once. Return the linked list sorted as well.

C++

class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(head == NULL){
            return NULL;
        }
        ListNode* temp = head;
        while(temp != nullptr && temp->next != nullptr){
            if(temp->val == temp->next->val){
                temp->next = temp->next->next;
            }
            else{
                temp = temp->next;
            }
    }
        
        return head;
    }
};


Delete all duplicate self also:

class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(head == NULL || head->next == NULL){
            return head;
        }

        if(head->val != head->next->val){
            head->next = deleteDuplicates(head->next);
            return head;
        }
        else{
            while(head->next && head->val == head->next->val){
                head = head->next;
            }

            return deleteDuplicates(head->next);
        }
    }
};
