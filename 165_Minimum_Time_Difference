Given a list of 24-hour clock time points in "HH:MM" format, return the minimum minutes difference between any two time-points in the list.
 

Example 1:

Input: timePoints = ["23:59","00:00"]
Output: 1
Example 2:

Input: timePoints = ["00:00","23:59","00:00"]
Output: 0

class Solution {
    public int findMinDifference(List<String> timePoints) {
        List<Integer> arr = new ArrayList<Integer>();

        for(int i=0; i<timePoints.size(); i++){
            int n = (Integer.parseInt(timePoints.get(i).substring(0,2)) *60 + Integer.parseInt(timePoints.get(i).substring(3)));

            arr.add(n);
        }

        Collections.sort(arr);
        int minDifference = Integer.MAX_VALUE;
        
        for (int i = 0; i < arr.size()-1; i++) {
            minDifference = Math.min(minDifference, arr.get(i+1) - arr.get(i));
        }

        if (!arr.isEmpty()) {
            minDifference = Math.min(minDifference, 1440 - (arr.get(arr.size() - 1) - arr.get(0)));
        }

        return minDifference;
    }
}
